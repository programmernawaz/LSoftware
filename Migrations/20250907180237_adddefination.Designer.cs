// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PathLabAPI.Data;

#nullable disable

namespace PathLabAPI.Migrations
{
    [DbContext(typeof(PathLabDbContext))]
    [Migration("20250907180237_adddefination")]
    partial class adddefination
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PathLabAPI.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("PathLabAPI.Entities.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TestOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TestOrderId")
                        .IsUnique();

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PathLabAPI.Entities.LabTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("LabTests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Hematology",
                            Code = "CBC01",
                            Name = "CBC",
                            Price = 300m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Biochemistry",
                            Code = "KFT01",
                            Name = "KFT",
                            Price = 500m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Biochemistry",
                            Code = "LFT01",
                            Name = "LFT",
                            Price = 600m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Biochemistry",
                            Code = "LIP01",
                            Name = "Lipid Profile",
                            Price = 700m
                        });
                });

            modelBuilder.Entity("PathLabAPI.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("TestOrders");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LabTestId")
                        .HasColumnType("int");

                    b.Property<int>("TestOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LabTestId");

                    b.HasIndex("TestOrderId");

                    b.ToTable("TestOrderItems");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LabTestId")
                        .HasColumnType("int");

                    b.Property<double?>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double?>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceRange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LabTestId");

                    b.ToTable("TestParameters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Definition = "Hemoglobin measures oxygen-carrying protein in red blood cells; low levels may indicate anemia.",
                            LabTestId = 1,
                            ParameterName = "Hemoglobin",
                            ReferenceRange = "12-16",
                            Unit = "g/dL"
                        },
                        new
                        {
                            Id = 2,
                            Definition = "White blood cell count indicates immune system activity; high levels suggest infection or inflammation.",
                            LabTestId = 1,
                            ParameterName = "WBC Count",
                            ReferenceRange = "4000-11000",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 3,
                            Definition = "Red blood cell count measures number of red cells; abnormalities may indicate anemia or polycythemia.",
                            LabTestId = 1,
                            ParameterName = "RBC Count",
                            ReferenceRange = "4.5-5.9",
                            Unit = "mill/µL"
                        },
                        new
                        {
                            Id = 4,
                            Definition = "Platelets help in blood clotting; low levels increase bleeding risk, high levels increase clot risk.",
                            LabTestId = 1,
                            ParameterName = "Platelets",
                            ReferenceRange = "1.5-4.5",
                            Unit = "lakh/µL"
                        },
                        new
                        {
                            Id = 5,
                            Definition = "Hematocrit measures proportion of blood occupied by red cells; low values suggest anemia.",
                            LabTestId = 1,
                            ParameterName = "PCV (Hematocrit)",
                            ReferenceRange = "36-46",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 6,
                            Definition = "MCV indicates average size of red blood cells; useful for anemia classification.",
                            LabTestId = 1,
                            ParameterName = "MCV (Mean Corpuscular Volume)",
                            ReferenceRange = "80-100",
                            Unit = "fL"
                        },
                        new
                        {
                            Id = 7,
                            Definition = "MCH shows average hemoglobin per red cell; helps identify anemia type.",
                            LabTestId = 1,
                            ParameterName = "MCH (Mean Corpuscular Hemoglobin)",
                            ReferenceRange = "27-32",
                            Unit = "pg"
                        },
                        new
                        {
                            Id = 8,
                            Definition = "MCHC indicates hemoglobin concentration within red cells; abnormal in anemia.",
                            LabTestId = 1,
                            ParameterName = "MCHC (Mean Corpuscular Hemoglobin Concentration)",
                            ReferenceRange = "32-36",
                            Unit = "g/dL"
                        },
                        new
                        {
                            Id = 9,
                            Definition = "RDW measures variation in red cell size; high values suggest mixed anemia.",
                            LabTestId = 1,
                            ParameterName = "RDW (Red Cell Distribution Width)",
                            ReferenceRange = "11-15",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 10,
                            Definition = "Neutrophils are first-line defense against infection; high in bacterial infections.",
                            LabTestId = 1,
                            ParameterName = "Neutrophils",
                            ReferenceRange = "40-60",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 11,
                            Definition = "Lymphocytes are key for immunity; high in viral infections.",
                            LabTestId = 1,
                            ParameterName = "Lymphocytes",
                            ReferenceRange = "20-40",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 12,
                            Definition = "Monocytes fight chronic infection and inflammation.",
                            LabTestId = 1,
                            ParameterName = "Monocytes",
                            ReferenceRange = "2-8",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 13,
                            Definition = "Eosinophils increase in allergies and parasitic infections.",
                            LabTestId = 1,
                            ParameterName = "Eosinophils",
                            ReferenceRange = "1-6",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 14,
                            Definition = "Basophils release histamine in allergic reactions.",
                            LabTestId = 1,
                            ParameterName = "Basophils",
                            ReferenceRange = "0-1",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 15,
                            Definition = "Absolute neutrophil count evaluates infection-fighting capacity.",
                            LabTestId = 1,
                            ParameterName = "Absolute Neutrophil Count",
                            ReferenceRange = "1500-8000",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 16,
                            Definition = "Absolute lymphocyte count reflects immune strength.",
                            LabTestId = 1,
                            ParameterName = "Absolute Lymphocyte Count",
                            ReferenceRange = "1000-4800",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 17,
                            Definition = "Absolute monocyte count helps assess chronic infection or inflammation.",
                            LabTestId = 1,
                            ParameterName = "Absolute Monocyte Count",
                            ReferenceRange = "200-800",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 18,
                            Definition = "Absolute eosinophil count increases in allergies and asthma.",
                            LabTestId = 1,
                            ParameterName = "Absolute Eosinophil Count",
                            ReferenceRange = "50-500",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 19,
                            Definition = "Absolute basophil count is rarely elevated; linked to allergic responses.",
                            LabTestId = 1,
                            ParameterName = "Absolute Basophil Count",
                            ReferenceRange = "0-200",
                            Unit = "/mm³"
                        },
                        new
                        {
                            Id = 20,
                            Definition = "Blood Urea indicates kidney’s ability to remove waste products.",
                            LabTestId = 2,
                            ParameterName = "Blood Urea",
                            ReferenceRange = "15-40",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 21,
                            Definition = "Creatinine level helps assess kidney filtration efficiency.",
                            LabTestId = 2,
                            ParameterName = "Serum Creatinine",
                            ReferenceRange = "0.6-1.2",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 22,
                            Definition = "Uric acid measures purine metabolism; high levels may cause gout or kidney issues.",
                            LabTestId = 2,
                            ParameterName = "Uric Acid",
                            ReferenceRange = "Male: 3.4-7.0, Female: 2.4-6.0",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 23,
                            Definition = "BUN reflects nitrogen waste in blood; used for kidney function testing.",
                            LabTestId = 2,
                            ParameterName = "Blood Urea Nitrogen (BUN)",
                            ReferenceRange = "7-20",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 24,
                            Definition = "Ratio helps differentiate between kidney and non-kidney causes of dysfunction.",
                            LabTestId = 2,
                            ParameterName = "BUN/Creatinine Ratio",
                            ReferenceRange = "10:1 – 20:1",
                            Unit = "Ratio"
                        },
                        new
                        {
                            Id = 25,
                            Definition = "Sodium is essential for fluid balance and nerve function.",
                            LabTestId = 2,
                            ParameterName = "Sodium (Na⁺)",
                            ReferenceRange = "135-145",
                            Unit = "mmol/L"
                        },
                        new
                        {
                            Id = 26,
                            Definition = "Potassium is important for heart and muscle function.",
                            LabTestId = 2,
                            ParameterName = "Potassium (K⁺)",
                            ReferenceRange = "3.5-5.0",
                            Unit = "mmol/L"
                        },
                        new
                        {
                            Id = 27,
                            Definition = "Chloride helps maintain acid-base balance and hydration.",
                            LabTestId = 2,
                            ParameterName = "Chloride (Cl⁻)",
                            ReferenceRange = "96-106",
                            Unit = "mmol/L"
                        },
                        new
                        {
                            Id = 28,
                            Definition = "Calcium is needed for bones, nerves, and muscles.",
                            LabTestId = 2,
                            ParameterName = "Calcium (Ca²⁺)",
                            ReferenceRange = "8.5-10.5",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 29,
                            Definition = "Phosphorus is essential for energy production and bone health.",
                            LabTestId = 2,
                            ParameterName = "Phosphorus",
                            ReferenceRange = "2.5-4.5",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 30,
                            Definition = "eGFR estimates kidney filtration rate; key marker for CKD.",
                            LabTestId = 2,
                            ParameterName = "eGFR",
                            ReferenceRange = ">90",
                            Unit = "mL/min/1.73m²"
                        },
                        new
                        {
                            Id = 31,
                            Definition = "Total bilirubin measures breakdown of red blood cells; high levels indicate jaundice.",
                            LabTestId = 3,
                            ParameterName = "Total Bilirubin",
                            ReferenceRange = "0.3-1.2",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 32,
                            Definition = "Direct bilirubin indicates liver’s ability to excrete bile.",
                            LabTestId = 3,
                            ParameterName = "Direct Bilirubin",
                            ReferenceRange = "0.0-0.3",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 33,
                            Definition = "Indirect bilirubin is unconjugated; imbalance may indicate hemolysis.",
                            LabTestId = 3,
                            ParameterName = "Indirect Bilirubin",
                            ReferenceRange = "0.2-0.9",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 34,
                            Definition = "AST enzyme helps evaluate liver and heart health.",
                            LabTestId = 3,
                            ParameterName = "SGOT (AST)",
                            ReferenceRange = "Male: <40, Female: <35",
                            Unit = "U/L"
                        },
                        new
                        {
                            Id = 35,
                            Definition = "ALT enzyme is specific for liver injury.",
                            LabTestId = 3,
                            ParameterName = "SGPT (ALT)",
                            ReferenceRange = "Male: <40, Female: <35",
                            Unit = "U/L"
                        },
                        new
                        {
                            Id = 36,
                            Definition = "ALP helps detect liver, bile duct, and bone disorders.",
                            LabTestId = 3,
                            ParameterName = "Alkaline Phosphatase (ALP)",
                            ReferenceRange = "44-147",
                            Unit = "U/L"
                        },
                        new
                        {
                            Id = 37,
                            Definition = "GGT is elevated in alcohol or bile duct-related liver diseases.",
                            LabTestId = 3,
                            ParameterName = "Gamma GT (GGT)",
                            ReferenceRange = "Male: 15-85, Female: 5-55",
                            Unit = "U/L"
                        },
                        new
                        {
                            Id = 38,
                            Definition = "Total protein indicates nutritional status and liver function.",
                            LabTestId = 3,
                            ParameterName = "Total Protein",
                            ReferenceRange = "6.0-8.3",
                            Unit = "g/dL"
                        },
                        new
                        {
                            Id = 39,
                            Definition = "Albumin maintains osmotic pressure and transports substances.",
                            LabTestId = 3,
                            ParameterName = "Albumin",
                            ReferenceRange = "3.5-5.0",
                            Unit = "g/dL"
                        },
                        new
                        {
                            Id = 40,
                            Definition = "Globulins play roles in immunity and transport.",
                            LabTestId = 3,
                            ParameterName = "Globulin",
                            ReferenceRange = "2.0-3.5",
                            Unit = "g/dL"
                        },
                        new
                        {
                            Id = 41,
                            Definition = "Albumin/Globulin ratio helps in diagnosing liver and kidney disease.",
                            LabTestId = 3,
                            ParameterName = "A/G Ratio",
                            ReferenceRange = "1.2-2.2",
                            Unit = "Ratio"
                        },
                        new
                        {
                            Id = 42,
                            Definition = "Total cholesterol measures overall fat in the blood; high levels increase heart risk.",
                            LabTestId = 4,
                            ParameterName = "Total Cholesterol",
                            ReferenceRange = "<200",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 43,
                            Definition = "Triglycerides are stored fats; high levels increase risk of heart disease.",
                            LabTestId = 4,
                            ParameterName = "Triglycerides",
                            ReferenceRange = "<150",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 44,
                            Definition = "HDL is ‘good’ cholesterol that protects against heart disease.",
                            LabTestId = 4,
                            ParameterName = "HDL Cholesterol",
                            ReferenceRange = "Male: >40, Female: >50",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 45,
                            Definition = "LDL is ‘bad’ cholesterol; high levels lead to artery blockage.",
                            LabTestId = 4,
                            ParameterName = "LDL Cholesterol",
                            ReferenceRange = "<100 Optimal",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 46,
                            Definition = "VLDL carries triglycerides; high levels indicate high fat in blood.",
                            LabTestId = 4,
                            ParameterName = "VLDL Cholesterol",
                            ReferenceRange = "5-30",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 47,
                            Definition = "Non-HDL cholesterol is a better predictor of heart risk than LDL alone.",
                            LabTestId = 4,
                            ParameterName = "Non-HDL Cholesterol",
                            ReferenceRange = "<130",
                            Unit = "mg/dL"
                        },
                        new
                        {
                            Id = 48,
                            Definition = "Cholesterol/HDL ratio helps evaluate heart risk.",
                            LabTestId = 4,
                            ParameterName = "TC/HDL Ratio",
                            ReferenceRange = "<5",
                            Unit = "Ratio"
                        },
                        new
                        {
                            Id = 49,
                            Definition = "LDL/HDL ratio is used to assess risk of cardiovascular disease.",
                            LabTestId = 4,
                            ParameterName = "LDL/HDL Ratio",
                            ReferenceRange = "<3.5",
                            Unit = "Ratio"
                        });
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Flag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TestOrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("TestParameterId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TestOrderItemId");

                    b.HasIndex("TestParameterId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("PathLabAPI.Entities.Invoice", b =>
                {
                    b.HasOne("PathLabAPI.Entities.TestOrder", "TestOrder")
                        .WithOne("Invoice")
                        .HasForeignKey("PathLabAPI.Entities.Invoice", "TestOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestOrder");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrder", b =>
                {
                    b.HasOne("PathLabAPI.Entities.Doctor", "Doctor")
                        .WithMany("Orders")
                        .HasForeignKey("DoctorId");

                    b.HasOne("PathLabAPI.Entities.Patient", "Patient")
                        .WithMany("Orders")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrderItem", b =>
                {
                    b.HasOne("PathLabAPI.Entities.LabTest", "LabTest")
                        .WithMany()
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PathLabAPI.Entities.TestOrder", "TestOrder")
                        .WithMany("Items")
                        .HasForeignKey("TestOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LabTest");

                    b.Navigation("TestOrder");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestParameter", b =>
                {
                    b.HasOne("PathLabAPI.Entities.LabTest", "LabTest")
                        .WithMany("Parameters")
                        .HasForeignKey("LabTestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LabTest");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestResult", b =>
                {
                    b.HasOne("PathLabAPI.Entities.TestOrderItem", "TestOrderItem")
                        .WithMany("Results")
                        .HasForeignKey("TestOrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PathLabAPI.Entities.TestParameter", "TestParameter")
                        .WithMany()
                        .HasForeignKey("TestParameterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TestOrderItem");

                    b.Navigation("TestParameter");
                });

            modelBuilder.Entity("PathLabAPI.Entities.Doctor", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PathLabAPI.Entities.LabTest", b =>
                {
                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("PathLabAPI.Entities.Patient", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrder", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("PathLabAPI.Entities.TestOrderItem", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
